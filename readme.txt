Описание:
Проэкт содержит 2 директории:
1. maptest - стандартная папка django проекта была сосздана с помощу команды  $ django-admin startproject maptest
имеет стандартное содержимое, естественно в settings.py и в urls.py были внесены изменения..

в settings.py я добавил

GOOGLE_API_OPTIONS = {
    "api_key": "AIzaSyAsCTUUgf20880DF1y8B5WXLSQwi6Q79qw",
    "table_id": "1L2MC8G8_HsloPzVPtajkBsWkC_bPQdL9BjVrwDjN",
    "latLng": {"lat": -34.397, "lng": 150.644},
    "zoom": 8,
}

где:

"api_key" - ключ приложения
"table_id" - индификатор  Fusion table

"latLng": {"lat": -34.397, "lng": 150.644},
"zoom": 8, - кординаты центра и маштаб обрабатуемой карты


2. maptapp - директория приложения. Приложение было созданно командой $python python manage.py  startapp maptapp,
но в структуру стадартного django приложения был были внесены изменения:

apllication  содержит 2 роутера:
urls.py  -  Home Page роутер который маршрутизирует только домашнюю страницу.
urls_api.py - REST API роутер для маршрутизации розработанного  функционала

views.py  - содержит два класса:
HomeView, MapApiView  оба класа являются  расширением класса django.views.generic.View и соответсвенно орентированы по
типам запроса  в соответсвии  REST rules.

HomeView - отображает сруктуру Номе Page. подлключает  Google.maps.api и подгружает стили js библиотеки, подключает
map.js (скрипт отображающий и управляющий контетом главной станицы) выгружает исходные данные для map.js

MapApiView - это серверная часть функционала map.js

models.py - Содержит ORM Object (Model) Address для хранения адресов в БД, Имеет расширенный конструктор, который при
создании модели с помощу службы google maps reverse geocode определяет адресс по указанным координатам, наличие адресса
является показатель валидности данной модели (is_valid). Метод attributes - для удобной представления этих данных в
визуальных таблицах.

fusiontable.py - это адаптер для работы с Google Fusion Tables Api Разработан по Active Record патерну, но с не полным
функционалом, ввиду его ненадобности.

test.json - информация для авторизации в Google Fusion Tables Api


static/js/map.js - js функционал для управления контентом домшней страницы, выполнен набором функций с использованием
jQuery

ресурсы:  jQuery, twitter bootstrap



Утановка проэкта:

1. Клонирум проэкт
2. Создаем virtualenv командой
3. активируем  virtualenv
4. Устанавливаем зависимости
5. Мигрируем базу данных
6. Запускаем проэт


